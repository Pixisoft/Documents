{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Overview"},{"location":"UnityAS/Afterimage/Details/","text":"Package upload # Additional compatibility information # Any Unity version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # Afterimage is a simple solution that work with 2D and 3D renderers, including UI components (Image, Text, Button, etc). Description # The tool is design to be simple and stable , hence it should be easy to learn and easy to maintain (for programmers). Plug 'n' play , it works out of the box Compatible with all devices , including mobile Extensible , with script Source code included IMPORTANT: This package only contains one effect (fade out), therefore if you want to apply other effect then it will require you with at least some programming experience! If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # This package can use in any .NET version since it only uses basic .NET API. You can use this tool with above Unity version 5.6+, yet we would always recommend you use the latest version of Unity.","title":"Details"},{"location":"UnityAS/Afterimage/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/Afterimage/Details/#additional-compatibility-information","text":"Any Unity version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/Afterimage/Details/#description","text":"","title":"Description"},{"location":"UnityAS/Afterimage/Details/#summary-10-200-characters","text":"Afterimage is a simple solution that work with 2D and 3D renderers, including UI components (Image, Text, Button, etc).","title":"Summary (10-200 characters)"},{"location":"UnityAS/Afterimage/Details/#description_1","text":"The tool is design to be simple and stable , hence it should be easy to learn and easy to maintain (for programmers). Plug 'n' play , it works out of the box Compatible with all devices , including mobile Extensible , with script Source code included IMPORTANT: This package only contains one effect (fade out), therefore if you want to apply other effect then it will require you with at least some programming experience! If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Description"},{"location":"UnityAS/Afterimage/Details/#technical-details","text":"This package can use in any .NET version since it only uses basic .NET API. You can use this tool with above Unity version 5.6+, yet we would always recommend you use the latest version of Unity.","title":"Technical details"},{"location":"UnityAS/Inspect_Html/Details/","text":"Package upload # Additional compatibility information # N/A Description # Summary (10-200 characters) # N/A Description # N/A Technical details # N/A","title":"Details"},{"location":"UnityAS/Inspect_Html/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/Inspect_Html/Details/#additional-compatibility-information","text":"N/A","title":"Additional compatibility information"},{"location":"UnityAS/Inspect_Html/Details/#description","text":"","title":"Description"},{"location":"UnityAS/Inspect_Html/Details/#summary-10-200-characters","text":"N/A","title":"Summary (10-200 characters)"},{"location":"UnityAS/Inspect_Html/Details/#description_1","text":"N/A","title":"Description"},{"location":"UnityAS/Inspect_Html/Details/#technical-details","text":"N/A","title":"Technical details"},{"location":"UnityAS/Inspect_Ini/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # A dedicated and up to date INI editor inside the Inspector window. Description # Inspect_Ini provides a graphical user interface inside Unity, therefore you can edit .ini files directly. Features # Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code P.S. No coding or scripting required! If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Details"},{"location":"UnityAS/Inspect_Ini/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/Inspect_Ini/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/Inspect_Ini/Details/#description","text":"","title":"Description"},{"location":"UnityAS/Inspect_Ini/Details/#summary-10-200-characters","text":"A dedicated and up to date INI editor inside the Inspector window.","title":"Summary (10-200 characters)"},{"location":"UnityAS/Inspect_Ini/Details/#description_1","text":"Inspect_Ini provides a graphical user interface inside Unity, therefore you can edit .ini files directly.","title":"Description"},{"location":"UnityAS/Inspect_Ini/Details/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code P.S. No coding or scripting required! If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Features"},{"location":"UnityAS/Inspect_Ini/Details/#technical-details","text":"The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Technical details"},{"location":"UnityAS/Inspect_Json/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # A dedicated and up to date Json editor inside the Inspector window. Description # Inspect_Json provides a graphical user interface inside Unity, therefore you can edit .json files directly. Features # Out of box Lightweight and easy to use Fully compatible with Unity system P.S. No coding or scripting required! P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Details"},{"location":"UnityAS/Inspect_Json/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/Inspect_Json/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/Inspect_Json/Details/#description","text":"","title":"Description"},{"location":"UnityAS/Inspect_Json/Details/#summary-10-200-characters","text":"A dedicated and up to date Json editor inside the Inspector window.","title":"Summary (10-200 characters)"},{"location":"UnityAS/Inspect_Json/Details/#description_1","text":"Inspect_Json provides a graphical user interface inside Unity, therefore you can edit .json files directly.","title":"Description"},{"location":"UnityAS/Inspect_Json/Details/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system P.S. No coding or scripting required! P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Features"},{"location":"UnityAS/Inspect_Json/Details/#technical-details","text":"The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Technical details"},{"location":"UnityAS/Inspect_Xml/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # A dedicated and up to date Xml editor inside the Inspector window. Description # Inspect_Xml provides a graphical user interface inside Unity, therefore you can edit .xml files directly. Features # Out of box Lightweight and easy to use Fully compatible with Unity system P.S. No coding or scripting required! P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Details"},{"location":"UnityAS/Inspect_Xml/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/Inspect_Xml/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/Inspect_Xml/Details/#description","text":"","title":"Description"},{"location":"UnityAS/Inspect_Xml/Details/#summary-10-200-characters","text":"A dedicated and up to date Xml editor inside the Inspector window.","title":"Summary (10-200 characters)"},{"location":"UnityAS/Inspect_Xml/Details/#description_1","text":"Inspect_Xml provides a graphical user interface inside Unity, therefore you can edit .xml files directly.","title":"Description"},{"location":"UnityAS/Inspect_Xml/Details/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system P.S. No coding or scripting required! P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Features"},{"location":"UnityAS/Inspect_Xml/Details/#technical-details","text":"The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Technical details"},{"location":"UnityAS/Inspect_Yaml/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # A dedicated and up to date Yaml editor inside the Inspector window. Description # Inspect_Yaml provides a graphical user interface inside Unity, therefore you can edit .yaml files directly. Features # Out of box Lightweight and easy to use Fully compatible with Unity system P.S. No coding or scripting required! P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Details"},{"location":"UnityAS/Inspect_Yaml/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/Inspect_Yaml/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/Inspect_Yaml/Details/#description","text":"","title":"Description"},{"location":"UnityAS/Inspect_Yaml/Details/#summary-10-200-characters","text":"A dedicated and up to date Yaml editor inside the Inspector window.","title":"Summary (10-200 characters)"},{"location":"UnityAS/Inspect_Yaml/Details/#description_1","text":"Inspect_Yaml provides a graphical user interface inside Unity, therefore you can edit .yaml files directly.","title":"Description"},{"location":"UnityAS/Inspect_Yaml/Details/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system P.S. No coding or scripting required! P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Features"},{"location":"UnityAS/Inspect_Yaml/Details/#technical-details","text":"The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Technical details"},{"location":"UnityAS/NovBundle/","text":"Hello World!","title":"NovBundle"},{"location":"UnityAS/NovBundle/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # NovBundle is a abstraction layer built on top of Asset Bundles system; it focuses on simplifying the Asset Bundles workflow so the user would not have to know too much details about the system itself. Description # Stop reinventing the wheel for Asset Bundles system. Use the simple programming interface that provided by this library for recreating any functions you need from the Asset Bundles system. You would need at least some scripting experiences in order to download and use Asset Bundles you have uploaded to your own server! Principles # Plug 'n' play , it works out of the box Lightweight , no other dependencies Does not pollute (project) , no files are generated Clean , no other resource files Stable and compatible , no hacky code Features # Control all over Edit -> Preferences -> NovBundle panel Bundle creation for specific platforms Server ready for you to test your Asset bundles! Programming ready for you to program custom Asset Bundle related functionality! Allow loading same bundle with multiple entries, see bug report here P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Details"},{"location":"UnityAS/NovBundle/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/NovBundle/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/NovBundle/Details/#description","text":"","title":"Description"},{"location":"UnityAS/NovBundle/Details/#summary-10-200-characters","text":"NovBundle is a abstraction layer built on top of Asset Bundles system; it focuses on simplifying the Asset Bundles workflow so the user would not have to know too much details about the system itself.","title":"Summary (10-200 characters)"},{"location":"UnityAS/NovBundle/Details/#description_1","text":"Stop reinventing the wheel for Asset Bundles system. Use the simple programming interface that provided by this library for recreating any functions you need from the Asset Bundles system. You would need at least some scripting experiences in order to download and use Asset Bundles you have uploaded to your own server!","title":"Description"},{"location":"UnityAS/NovBundle/Details/#principles","text":"Plug 'n' play , it works out of the box Lightweight , no other dependencies Does not pollute (project) , no files are generated Clean , no other resource files Stable and compatible , no hacky code","title":"Principles"},{"location":"UnityAS/NovBundle/Details/#features","text":"Control all over Edit -> Preferences -> NovBundle panel Bundle creation for specific platforms Server ready for you to test your Asset bundles! Programming ready for you to program custom Asset Bundle related functionality! Allow loading same bundle with multiple entries, see bug report here P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Features"},{"location":"UnityAS/NovBundle/Details/#technical-details","text":"The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Technical details"},{"location":"UnityAS/PackageExporter/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # Package Exporter is a packaging (exporting) tool for Unity package system. It allows you to export multiple packages with different contents. Description # This is often use when you have multiple target to export but it's hard to memorize all contents to export for each packages. This tool resolve these issues, and provides a method similar to Git (Source Control) ignore system. Features: # Export multiple packages in a project Export method similar to .gitignore (easy for coder) Lightweight, no other dependencies Clean, no files are generated Highly compatible to any Unity version P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. More Info>> Technical details # The package uses Unity Packaging API and since Unity has established the packaging system in very early version, it will work on most of the Unity version. Thus, I will recommend you work use this package wit minimum version 5.6 or above.","title":"Details"},{"location":"UnityAS/PackageExporter/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/PackageExporter/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/PackageExporter/Details/#description","text":"","title":"Description"},{"location":"UnityAS/PackageExporter/Details/#summary-10-200-characters","text":"Package Exporter is a packaging (exporting) tool for Unity package system. It allows you to export multiple packages with different contents.","title":"Summary (10-200 characters)"},{"location":"UnityAS/PackageExporter/Details/#description_1","text":"This is often use when you have multiple target to export but it's hard to memorize all contents to export for each packages. This tool resolve these issues, and provides a method similar to Git (Source Control) ignore system.","title":"Description"},{"location":"UnityAS/PackageExporter/Details/#features","text":"Export multiple packages in a project Export method similar to .gitignore (easy for coder) Lightweight, no other dependencies Clean, no files are generated Highly compatible to any Unity version P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. More Info>>","title":"Features:"},{"location":"UnityAS/PackageExporter/Details/#technical-details","text":"The package uses Unity Packaging API and since Unity has established the packaging system in very early version, it will work on most of the Unity version. Thus, I will recommend you work use this package wit minimum version 5.6 or above.","title":"Technical details"},{"location":"UnityAS/WatchLog/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # Watch Log is variable tracker, it helps you track components over time. Description # This tool allows you to watch multiple components over time without lockdown your inspector window. It's annoying when your game is unorganized due to multiple complex programming logic running simultaneously; this supports you to debug and break down complex game logic by tracking each GameObject's component down individually. Features # Out of box Lightweight and easy to use Display an editor window with the data you want to keep an eye on Show Error/Warning/Log information Display each value in categories P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Details"},{"location":"UnityAS/WatchLog/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/WatchLog/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/WatchLog/Details/#description","text":"","title":"Description"},{"location":"UnityAS/WatchLog/Details/#summary-10-200-characters","text":"Watch Log is variable tracker, it helps you track components over time.","title":"Summary (10-200 characters)"},{"location":"UnityAS/WatchLog/Details/#description_1","text":"This tool allows you to watch multiple components over time without lockdown your inspector window. It's annoying when your game is unorganized due to multiple complex programming logic running simultaneously; this supports you to debug and break down complex game logic by tracking each GameObject's component down individually.","title":"Description"},{"location":"UnityAS/WatchLog/Details/#features","text":"Out of box Lightweight and easy to use Display an editor window with the data you want to keep an eye on Show Error/Warning/Log information Display each value in categories P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Features"},{"location":"UnityAS/WatchLog/Details/#technical-details","text":"The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Technical details"},{"location":"UnityAS/sHierarchy/Details/","text":"Package upload # Additional compatibility information # Any version above 2019.1+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # sHierarchy aims to be robust but keep both stability and compatiblity high to developers. Description # sHierarchy is meant to design that matches the Unity default settings. With that being said, user should find familiars without forcing themselves learning a new tool. We choose to design a minimalistic hierarchy without over exaggerate the tool itself. Yet the tool should be powerful enough for developers to use for their daily tasks. Principles # Plug 'n' play , it works out of the box Lightweight , no other dependencies Does not pollute (project) , no files are generated Clean , no other resource files Stable and compatible , no hacky code Open Source , anyone can help us improve! Features # Control all over Edit -> Preferences -> sHierarchy panel Display icon for each GameObject and Components Display enable/disable state of each GameObject/Components Display log/warning/error icon (behind the name of GameObject) Displaying tag and layer of a GameObject Displaying instance ID of a GameObject Any feature can be disabled Work in play mode Work in prefab isolation mode P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. More Info>> Technical details # This plugin is base on top of Custom Hierarchy for Unity made by author Federico . Thankfully, Federico has granted us the permission to sell on to market, due to the changes we have changed! The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we would recommended you use this package in Unity version 2021. We would continue support the latest version of Unity Engine. Notice the tool is open source; so you can find the full source code on GitHub, the link https://github.com/Pixisoft/sHierarchy. Feel free to open issues if you have question about the tool, or even better if you like to contribute to the package by opening pull requests!","title":"Details"},{"location":"UnityAS/sHierarchy/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/sHierarchy/Details/#additional-compatibility-information","text":"Any version above 2019.1+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/sHierarchy/Details/#description","text":"","title":"Description"},{"location":"UnityAS/sHierarchy/Details/#summary-10-200-characters","text":"sHierarchy aims to be robust but keep both stability and compatiblity high to developers.","title":"Summary (10-200 characters)"},{"location":"UnityAS/sHierarchy/Details/#description_1","text":"sHierarchy is meant to design that matches the Unity default settings. With that being said, user should find familiars without forcing themselves learning a new tool. We choose to design a minimalistic hierarchy without over exaggerate the tool itself. Yet the tool should be powerful enough for developers to use for their daily tasks.","title":"Description"},{"location":"UnityAS/sHierarchy/Details/#principles","text":"Plug 'n' play , it works out of the box Lightweight , no other dependencies Does not pollute (project) , no files are generated Clean , no other resource files Stable and compatible , no hacky code Open Source , anyone can help us improve!","title":"Principles"},{"location":"UnityAS/sHierarchy/Details/#features","text":"Control all over Edit -> Preferences -> sHierarchy panel Display icon for each GameObject and Components Display enable/disable state of each GameObject/Components Display log/warning/error icon (behind the name of GameObject) Displaying tag and layer of a GameObject Displaying instance ID of a GameObject Any feature can be disabled Work in play mode Work in prefab isolation mode P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. More Info>>","title":"Features"},{"location":"UnityAS/sHierarchy/Details/#technical-details","text":"This plugin is base on top of Custom Hierarchy for Unity made by author Federico . Thankfully, Federico has granted us the permission to sell on to market, due to the changes we have changed! The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we would recommended you use this package in Unity version 2021. We would continue support the latest version of Unity Engine. Notice the tool is open source; so you can find the full source code on GitHub, the link https://github.com/Pixisoft/sHierarchy. Feel free to open issues if you have question about the tool, or even better if you like to contribute to the package by opening pull requests!","title":"Technical details"}]}