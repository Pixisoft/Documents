{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction # Document is built by MkDocs with theme cjsheets/mkdocs-rtd-dropdown . License # Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"Overview"},{"location":"#introduction","text":"Document is built by MkDocs with theme cjsheets/mkdocs-rtd-dropdown .","title":"Introduction"},{"location":"#license","text":"Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"License"},{"location":"Games/","text":"Games #","title":"Games"},{"location":"Games/#games","text":"","title":"Games"},{"location":"Tools/","text":"Tools #","title":"Tools"},{"location":"Tools/#tools","text":"","title":"Tools"},{"location":"UnityAS/","text":"UnityAS (Unity Asset Store) #","title":"UnityAS (Unity Asset Store)"},{"location":"UnityAS/#unityas-unity-asset-store","text":"","title":"UnityAS (Unity Asset Store)"},{"location":"UnityAS/Afterimage/","text":"Afterimage # Afterimage VFX for Unity Cube UI Butterfly \ud83c\udfc6 Features # One step to add a component to the scene Fully compatible with Unity system Provide auto and manual update of trail Support fade out for 2D/3D gameobject Fully accessible to source code Compatible with all devices, including mobile Work with UI/Canvas Lightweight and easy to use Highly customizable with script License # Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"Afterimage"},{"location":"UnityAS/Afterimage/#afterimage","text":"Afterimage VFX for Unity Cube UI Butterfly","title":"Afterimage"},{"location":"UnityAS/Afterimage/#features","text":"One step to add a component to the scene Fully compatible with Unity system Provide auto and manual update of trail Support fade out for 2D/3D gameobject Fully accessible to source code Compatible with all devices, including mobile Work with UI/Canvas Lightweight and easy to use Highly customizable with script","title":"\ud83c\udfc6 Features"},{"location":"UnityAS/Afterimage/#license","text":"Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"License"},{"location":"UnityAS/Afterimage/Details/","text":"Package upload # Additional compatibility information # Any Unity version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # Afterimage is a simple solution that work with 2D and 3D renderers, including UI components (Image, Text, Button, etc). Description # The tool is design to be simple and stable , hence it should be easy to learn and easy to maintain (for programmers). Plug 'n' play , it works out of the box Compatible with all devices , including mobile Extensible , with script Source code included IMPORTANT: This package only contains one effect (fade out), therefore if you want to apply other effect then it will require you with at least some programming experience! If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # This package can use in any .NET version since it only uses basic .NET API. You can use this tool with above Unity version 5.6+, yet we would always recommend you use the latest version of Unity.","title":"Details"},{"location":"UnityAS/Afterimage/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/Afterimage/Details/#additional-compatibility-information","text":"Any Unity version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/Afterimage/Details/#description","text":"","title":"Description"},{"location":"UnityAS/Afterimage/Details/#summary-10-200-characters","text":"Afterimage is a simple solution that work with 2D and 3D renderers, including UI components (Image, Text, Button, etc).","title":"Summary (10-200 characters)"},{"location":"UnityAS/Afterimage/Details/#description_1","text":"The tool is design to be simple and stable , hence it should be easy to learn and easy to maintain (for programmers). Plug 'n' play , it works out of the box Compatible with all devices , including mobile Extensible , with script Source code included IMPORTANT: This package only contains one effect (fade out), therefore if you want to apply other effect then it will require you with at least some programming experience! If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Description"},{"location":"UnityAS/Afterimage/Details/#technical-details","text":"This package can use in any .NET version since it only uses basic .NET API. You can use this tool with above Unity version 5.6+, yet we would always recommend you use the latest version of Unity.","title":"Technical details"},{"location":"UnityAS/Inspect_Html/","text":"Inspect Html # Render and edit HTML inside the Inspector window. GUI Mode Text Mode \ud83c\udfc6 Features # Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code License # Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"Inspect Html"},{"location":"UnityAS/Inspect_Html/#inspect-html","text":"Render and edit HTML inside the Inspector window. GUI Mode Text Mode","title":"Inspect Html"},{"location":"UnityAS/Inspect_Html/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code","title":"\ud83c\udfc6 Features"},{"location":"UnityAS/Inspect_Html/#license","text":"Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"License"},{"location":"UnityAS/Inspect_Html/Details/","text":"Package upload # Additional compatibility information # N/A Description # Summary (10-200 characters) # N/A Description # N/A Technical details # N/A","title":"Details"},{"location":"UnityAS/Inspect_Html/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/Inspect_Html/Details/#additional-compatibility-information","text":"N/A","title":"Additional compatibility information"},{"location":"UnityAS/Inspect_Html/Details/#description","text":"","title":"Description"},{"location":"UnityAS/Inspect_Html/Details/#summary-10-200-characters","text":"N/A","title":"Summary (10-200 characters)"},{"location":"UnityAS/Inspect_Html/Details/#description_1","text":"N/A","title":"Description"},{"location":"UnityAS/Inspect_Html/Details/#technical-details","text":"N/A","title":"Technical details"},{"location":"UnityAS/Inspect_Ini/","text":"Inspect Ini # A dedicated and up to date INI editor inside the Inspector window. GUI Mode Text Mode P.S. This package requires ini-parser to run, yet we have included for you! \ud83c\udfc6 Features # Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code License # Copyright (c) Pixisoft. All rights reserved. Licensed under MIT. See LICENSE.txt for details.","title":"Inspect Ini"},{"location":"UnityAS/Inspect_Ini/#inspect-ini","text":"A dedicated and up to date INI editor inside the Inspector window. GUI Mode Text Mode P.S. This package requires ini-parser to run, yet we have included for you!","title":"Inspect Ini"},{"location":"UnityAS/Inspect_Ini/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code","title":"\ud83c\udfc6 Features"},{"location":"UnityAS/Inspect_Ini/#license","text":"Copyright (c) Pixisoft. All rights reserved. Licensed under MIT. See LICENSE.txt for details.","title":"License"},{"location":"UnityAS/Inspect_Ini/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # A dedicated and up to date INI editor inside the Inspector window. Description # Inspect_Ini provides a graphical user interface inside Unity, therefore you can edit .ini files directly. Features # Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code P.S. No coding or scripting required! If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Details"},{"location":"UnityAS/Inspect_Ini/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/Inspect_Ini/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/Inspect_Ini/Details/#description","text":"","title":"Description"},{"location":"UnityAS/Inspect_Ini/Details/#summary-10-200-characters","text":"A dedicated and up to date INI editor inside the Inspector window.","title":"Summary (10-200 characters)"},{"location":"UnityAS/Inspect_Ini/Details/#description_1","text":"Inspect_Ini provides a graphical user interface inside Unity, therefore you can edit .ini files directly.","title":"Description"},{"location":"UnityAS/Inspect_Ini/Details/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code P.S. No coding or scripting required! If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Features"},{"location":"UnityAS/Inspect_Ini/Details/#technical-details","text":"The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Technical details"},{"location":"UnityAS/Inspect_Json/","text":"Inspect Json # A dedicated and up to date JSON editor inside the Inspector window. GUI Mode Text Mode \ud83c\udfc6 Features # Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code License # Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"Inspect Json"},{"location":"UnityAS/Inspect_Json/#inspect-json","text":"A dedicated and up to date JSON editor inside the Inspector window. GUI Mode Text Mode","title":"Inspect Json"},{"location":"UnityAS/Inspect_Json/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code","title":"\ud83c\udfc6 Features"},{"location":"UnityAS/Inspect_Json/#license","text":"Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"License"},{"location":"UnityAS/Inspect_Json/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # A dedicated and up to date Json editor inside the Inspector window. Description # Inspect_Json provides a graphical user interface inside Unity, therefore you can edit .json files directly. Features # Out of box Lightweight and easy to use Fully compatible with Unity system P.S. No coding or scripting required! P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Details"},{"location":"UnityAS/Inspect_Json/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/Inspect_Json/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/Inspect_Json/Details/#description","text":"","title":"Description"},{"location":"UnityAS/Inspect_Json/Details/#summary-10-200-characters","text":"A dedicated and up to date Json editor inside the Inspector window.","title":"Summary (10-200 characters)"},{"location":"UnityAS/Inspect_Json/Details/#description_1","text":"Inspect_Json provides a graphical user interface inside Unity, therefore you can edit .json files directly.","title":"Description"},{"location":"UnityAS/Inspect_Json/Details/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system P.S. No coding or scripting required! P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Features"},{"location":"UnityAS/Inspect_Json/Details/#technical-details","text":"The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Technical details"},{"location":"UnityAS/Inspect_Xml/","text":"Inspect Xml # A dedicated and up to date XML editor inside the Inspector window. GUI Mode Text Mode \ud83c\udfc6 Features # Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code License # Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"Inspect Xml"},{"location":"UnityAS/Inspect_Xml/#inspect-xml","text":"A dedicated and up to date XML editor inside the Inspector window. GUI Mode Text Mode","title":"Inspect Xml"},{"location":"UnityAS/Inspect_Xml/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code","title":"\ud83c\udfc6 Features"},{"location":"UnityAS/Inspect_Xml/#license","text":"Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"License"},{"location":"UnityAS/Inspect_Xml/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # A dedicated and up to date Xml editor inside the Inspector window. Description # Inspect_Xml provides a graphical user interface inside Unity, therefore you can edit .xml files directly. Features # Out of box Lightweight and easy to use Fully compatible with Unity system P.S. No coding or scripting required! P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Details"},{"location":"UnityAS/Inspect_Xml/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/Inspect_Xml/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/Inspect_Xml/Details/#description","text":"","title":"Description"},{"location":"UnityAS/Inspect_Xml/Details/#summary-10-200-characters","text":"A dedicated and up to date Xml editor inside the Inspector window.","title":"Summary (10-200 characters)"},{"location":"UnityAS/Inspect_Xml/Details/#description_1","text":"Inspect_Xml provides a graphical user interface inside Unity, therefore you can edit .xml files directly.","title":"Description"},{"location":"UnityAS/Inspect_Xml/Details/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system P.S. No coding or scripting required! P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Features"},{"location":"UnityAS/Inspect_Xml/Details/#technical-details","text":"The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Technical details"},{"location":"UnityAS/Inspect_Yaml/","text":"Inspect Yaml # A dedicated and up to date YAML editor inside the Inspector window. GUI Mode Text Mode \ud83c\udfc6 Features # Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code License # Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"Inspect Yaml"},{"location":"UnityAS/Inspect_Yaml/#inspect-yaml","text":"A dedicated and up to date YAML editor inside the Inspector window. GUI Mode Text Mode","title":"Inspect Yaml"},{"location":"UnityAS/Inspect_Yaml/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system Fully accessible to source code","title":"\ud83c\udfc6 Features"},{"location":"UnityAS/Inspect_Yaml/#license","text":"Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"License"},{"location":"UnityAS/Inspect_Yaml/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # A dedicated and up to date Yaml editor inside the Inspector window. Description # Inspect_Yaml provides a graphical user interface inside Unity, therefore you can edit .yaml files directly. Features # Out of box Lightweight and easy to use Fully compatible with Unity system P.S. No coding or scripting required! P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Details"},{"location":"UnityAS/Inspect_Yaml/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/Inspect_Yaml/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/Inspect_Yaml/Details/#description","text":"","title":"Description"},{"location":"UnityAS/Inspect_Yaml/Details/#summary-10-200-characters","text":"A dedicated and up to date Yaml editor inside the Inspector window.","title":"Summary (10-200 characters)"},{"location":"UnityAS/Inspect_Yaml/Details/#description_1","text":"Inspect_Yaml provides a graphical user interface inside Unity, therefore you can edit .yaml files directly.","title":"Description"},{"location":"UnityAS/Inspect_Yaml/Details/#features","text":"Out of box Lightweight and easy to use Fully compatible with Unity system P.S. No coding or scripting required! P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Features"},{"location":"UnityAS/Inspect_Yaml/Details/#technical-details","text":"The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Technical details"},{"location":"UnityAS/NovBundle/","text":"NovBundle # NovBundle is a abstraction layer built on top of Asset Bundles system from Unity Engine. This plugin focuses on simplifying the Asset Bundles workflow so the user would not have to know too much details about the system itself. \ud83e\udd1d Acknowledge # This proprietary software is made when I worked under NOVABY to resolve certain issues from the upstream Asset Bundles system. Thankfully, they have granted me permission to release this tool and sell it to the public on Aug 29, 2021, so here's a big thank you to them! \u2665\ufe0f \ud83d\udd28 How to use? # There are major three parts for you to master this package. Three parts including Creation , Upload , Call API . The following instructions would help you get through the basic usage of each parts. \ud83d\udd0d How to create Asset Bundles? # 1. Create Asset Bundle # Asset Bundles are generated by platforms, hence you would have multiple folders organized by platforms. First select a asset from the Project window then create a new Asset Bundle under the Inspector window. P.S. Here we created a asset bundle named _bundle_1 2. Build Asset Bundle for target platform # Then navigate to your menu bar NovBundle -> Build -> Target Platform , you should be prompt to select your output path. The following is what the outputted result should look like. P.S. You can export multiple platform but make sure you have organized in platform folder \ud83d\udd0d Upload to server # 1. Upload Asset Bundles files # In order to use these files, we need to upload our exported files to a server. You can use FTP client like FileZilla or other alternatives to do so. 2. Upload version.txt file # You would need to create a text file for Asset Bundles caching system. Here I have created a text file name version.text with the content of 1 . The text file content, 1 P.S. Make sure the number should only be an unsign integer, hence should not be number lower than 0! \ud83d\udd0d Download and use the Asset from the bundle # 1. Attach component BundleDownloader # Drag and drop the script BundleDownloader to any GameObject in the scene, so it would start function. Make sure you fill in the variable Bundle URL with your Asset Bundles url. For more information, see section Testing . 2. Access asset from script # Once you have done the above instructions, you are ready to use the asset from your Assets Bundle. The following code is a simple example for you to use the asset from the asset bundle you have created. using NovBundle; ... BundleDownloader bundleDownloader = ...; // Assign bundle downloader here! bundleDownloader.BundleAsset( \"_bundle_1\", // Name of the bundle \"assets/_project/prefabs/sphere.prefab\", (asset) => // Target asset, and callback { // Instantiate the prefab to scene Instantiate(asset, new Vector3(10, 0, 10), Quaternion.identity); }); \ud83c\udf89 Done! \ud83d\udcbe Uploader (SFTP) # After version 0.2.1 , you can now upload the asset bundles over the graphical user interface by using NovBundle -> Upload window. \ud83d\udda5\ufe0f Batch Mode # You can build Asset Bundles by using Unity's batch mode. Method Arguments Details NovBundle.BatchMode.BuildBundle --platform , --savePath Build target asset bundles to save path. NovBundle.BatchMode.Upload --platform , --savePath , --host , --port , --username , --password , --privateKey , --passphrase , --workingPath , --versionFile , --version Upload the asset bundles to the server through SFTP. Command Optional Details --platform \u274c Platform asset bundles to build. --savePath \u274c Where to save the asset bundles. --host \u274c Host name for SFTP. --port \u2714 Optional port number. (Default to 22) --username \u274c Username for login. --password \u274c Password for login. --privateKey \u274c Path points to your private key. --passphrase \u2714 Passphrase for your private key. --workingPath \u274c Target path from your server. --versionFile \u2714 Version text file. (Default to version.txt ) --version \u2714 Version number apply to version text file. (Default to 1 ) For example, $UNITY_PATH -batchmode -quit -projectPath \".\" -executeMethod NovBundle.BatchMode.BuildBundle --platform \"Windows\" --savePath \".\" The $UNITY_PATH is the path to Unity executable hence it depends on variant OS. On macOS, /Applications/Unity/Unity.app/Contents/MacOS/Unity On Windows, \"C:\\Program Files\\Unity\\Editor\\Unity.exe\" For more information, see Command line arguments . \ud83d\udcdd Testing # Methods 1. Test it on your server # For exampl,e http://www.yourwebsite.com/example/scenes.assetbundle Methods 2. Test it with file url # For exampl,e file://C:/example/scenes.assetbundle \ud83d\udd17 References # ARFoundation Unity Tutorial: Asset Bundles (Download 3D Models At Runtime) \u5728 Unity \u4f7f\u7528 AssetBundles \u5be6\u4f5c\u7c21\u6613\u7684\u904a\u6232\u8cc7\u6e90\u6253\u5305\u4ee5\u53ca\u66f4\u65b0\u6a5f\u5236 Packaging content with Addressable Assets | Open Projects Devlog All about AssetReferences License # Copyright (c) Pixisoft. All rights reserved. See LICENSE.txt for details.","title":"NovBundle"},{"location":"UnityAS/NovBundle/#novbundle","text":"NovBundle is a abstraction layer built on top of Asset Bundles system from Unity Engine. This plugin focuses on simplifying the Asset Bundles workflow so the user would not have to know too much details about the system itself.","title":"NovBundle"},{"location":"UnityAS/NovBundle/#acknowledge","text":"This proprietary software is made when I worked under NOVABY to resolve certain issues from the upstream Asset Bundles system. Thankfully, they have granted me permission to release this tool and sell it to the public on Aug 29, 2021, so here's a big thank you to them! \u2665\ufe0f","title":"\ud83e\udd1d Acknowledge"},{"location":"UnityAS/NovBundle/#how-to-use","text":"There are major three parts for you to master this package. Three parts including Creation , Upload , Call API . The following instructions would help you get through the basic usage of each parts.","title":"\ud83d\udd28 How to use?"},{"location":"UnityAS/NovBundle/#how-to-create-asset-bundles","text":"","title":"\ud83d\udd0d How to create Asset Bundles?"},{"location":"UnityAS/NovBundle/#1-create-asset-bundle","text":"Asset Bundles are generated by platforms, hence you would have multiple folders organized by platforms. First select a asset from the Project window then create a new Asset Bundle under the Inspector window. P.S. Here we created a asset bundle named _bundle_1","title":"1. Create Asset Bundle"},{"location":"UnityAS/NovBundle/#2-build-asset-bundle-for-target-platform","text":"Then navigate to your menu bar NovBundle -> Build -> Target Platform , you should be prompt to select your output path. The following is what the outputted result should look like. P.S. You can export multiple platform but make sure you have organized in platform folder","title":"2. Build Asset Bundle for target platform"},{"location":"UnityAS/NovBundle/#upload-to-server","text":"","title":"\ud83d\udd0d Upload to server"},{"location":"UnityAS/NovBundle/#1-upload-asset-bundles-files","text":"In order to use these files, we need to upload our exported files to a server. You can use FTP client like FileZilla or other alternatives to do so.","title":"1. Upload Asset Bundles files"},{"location":"UnityAS/NovBundle/#2-upload-versiontxt-file","text":"You would need to create a text file for Asset Bundles caching system. Here I have created a text file name version.text with the content of 1 . The text file content, 1 P.S. Make sure the number should only be an unsign integer, hence should not be number lower than 0!","title":"2. Upload version.txt file"},{"location":"UnityAS/NovBundle/#download-and-use-the-asset-from-the-bundle","text":"","title":"\ud83d\udd0d Download and use the Asset from the bundle"},{"location":"UnityAS/NovBundle/#1-attach-component-bundledownloader","text":"Drag and drop the script BundleDownloader to any GameObject in the scene, so it would start function. Make sure you fill in the variable Bundle URL with your Asset Bundles url. For more information, see section Testing .","title":"1. Attach component BundleDownloader"},{"location":"UnityAS/NovBundle/#2-access-asset-from-script","text":"Once you have done the above instructions, you are ready to use the asset from your Assets Bundle. The following code is a simple example for you to use the asset from the asset bundle you have created. using NovBundle; ... BundleDownloader bundleDownloader = ...; // Assign bundle downloader here! bundleDownloader.BundleAsset( \"_bundle_1\", // Name of the bundle \"assets/_project/prefabs/sphere.prefab\", (asset) => // Target asset, and callback { // Instantiate the prefab to scene Instantiate(asset, new Vector3(10, 0, 10), Quaternion.identity); }); \ud83c\udf89 Done!","title":"2. Access asset from script"},{"location":"UnityAS/NovBundle/#uploader-sftp","text":"After version 0.2.1 , you can now upload the asset bundles over the graphical user interface by using NovBundle -> Upload window.","title":"\ud83d\udcbe Uploader (SFTP)"},{"location":"UnityAS/NovBundle/#batch-mode","text":"You can build Asset Bundles by using Unity's batch mode. Method Arguments Details NovBundle.BatchMode.BuildBundle --platform , --savePath Build target asset bundles to save path. NovBundle.BatchMode.Upload --platform , --savePath , --host , --port , --username , --password , --privateKey , --passphrase , --workingPath , --versionFile , --version Upload the asset bundles to the server through SFTP. Command Optional Details --platform \u274c Platform asset bundles to build. --savePath \u274c Where to save the asset bundles. --host \u274c Host name for SFTP. --port \u2714 Optional port number. (Default to 22) --username \u274c Username for login. --password \u274c Password for login. --privateKey \u274c Path points to your private key. --passphrase \u2714 Passphrase for your private key. --workingPath \u274c Target path from your server. --versionFile \u2714 Version text file. (Default to version.txt ) --version \u2714 Version number apply to version text file. (Default to 1 ) For example, $UNITY_PATH -batchmode -quit -projectPath \".\" -executeMethod NovBundle.BatchMode.BuildBundle --platform \"Windows\" --savePath \".\" The $UNITY_PATH is the path to Unity executable hence it depends on variant OS. On macOS, /Applications/Unity/Unity.app/Contents/MacOS/Unity On Windows, \"C:\\Program Files\\Unity\\Editor\\Unity.exe\" For more information, see Command line arguments .","title":"\ud83d\udda5\ufe0f Batch Mode"},{"location":"UnityAS/NovBundle/#testing","text":"","title":"\ud83d\udcdd Testing"},{"location":"UnityAS/NovBundle/#methods-1-test-it-on-your-server","text":"For exampl,e http://www.yourwebsite.com/example/scenes.assetbundle","title":"Methods 1. Test it on your server"},{"location":"UnityAS/NovBundle/#methods-2-test-it-with-file-url","text":"For exampl,e file://C:/example/scenes.assetbundle","title":"Methods 2. Test it with file url"},{"location":"UnityAS/NovBundle/#references","text":"ARFoundation Unity Tutorial: Asset Bundles (Download 3D Models At Runtime) \u5728 Unity \u4f7f\u7528 AssetBundles \u5be6\u4f5c\u7c21\u6613\u7684\u904a\u6232\u8cc7\u6e90\u6253\u5305\u4ee5\u53ca\u66f4\u65b0\u6a5f\u5236 Packaging content with Addressable Assets | Open Projects Devlog All about AssetReferences","title":"\ud83d\udd17 References"},{"location":"UnityAS/NovBundle/#license","text":"Copyright (c) Pixisoft. All rights reserved. See LICENSE.txt for details.","title":"License"},{"location":"UnityAS/NovBundle/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # NovBundle is a abstraction layer built on top of Asset Bundles system; it focuses on simplifying the Asset Bundles workflow so the user would not have to know too much details about the system itself. Description # Stop reinventing the wheel for Asset Bundles system. Use the simple programming interface that provided by this library for recreating any functions you need from the Asset Bundles system. You would need at least some scripting experiences in order to download and use Asset Bundles you have uploaded to your own server! Principles # Plug 'n' play , it works out of the box Lightweight , no other dependencies Does not pollute (project) , no files are generated Clean , no other resource files Stable and compatible , no hacky code Features # Control all over Edit -> Preferences -> NovBundle panel Bundle creation for specific platforms Server ready for you to test your Asset bundles! Programming ready for you to program custom Asset Bundle related functionality! Allow loading same bundle with multiple entries, see bug report here P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Details"},{"location":"UnityAS/NovBundle/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/NovBundle/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/NovBundle/Details/#description","text":"","title":"Description"},{"location":"UnityAS/NovBundle/Details/#summary-10-200-characters","text":"NovBundle is a abstraction layer built on top of Asset Bundles system; it focuses on simplifying the Asset Bundles workflow so the user would not have to know too much details about the system itself.","title":"Summary (10-200 characters)"},{"location":"UnityAS/NovBundle/Details/#description_1","text":"Stop reinventing the wheel for Asset Bundles system. Use the simple programming interface that provided by this library for recreating any functions you need from the Asset Bundles system. You would need at least some scripting experiences in order to download and use Asset Bundles you have uploaded to your own server!","title":"Description"},{"location":"UnityAS/NovBundle/Details/#principles","text":"Plug 'n' play , it works out of the box Lightweight , no other dependencies Does not pollute (project) , no files are generated Clean , no other resource files Stable and compatible , no hacky code","title":"Principles"},{"location":"UnityAS/NovBundle/Details/#features","text":"Control all over Edit -> Preferences -> NovBundle panel Bundle creation for specific platforms Server ready for you to test your Asset bundles! Programming ready for you to program custom Asset Bundle related functionality! Allow loading same bundle with multiple entries, see bug report here P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Features"},{"location":"UnityAS/NovBundle/Details/#technical-details","text":"The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Technical details"},{"location":"UnityAS/PackageExporter/","text":"Package Exporter # Export multiple packages by just one click, with no need to uncheck the assets. This package is a packaging (exporting) tool for Unity package system. It allows you to export multiple packages with different contents. P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. \ud83c\udfc6 Features # Export multiple packages in a project Export method similar to .gitignore (easy for coder) Lightweight, no other dependencies Clean, no files are generated Highly compatible to any Unity version \ud83d\udd28 How to use? # Here explains how you use this package correctly. \ud83d\udd0d Step 1. Import Package # You will need to import the package to your project. The package can be download from here . \ud83d\udd0d Step 2. Start using Package Exporter Window # You can start the PackageExporter window from the menu bar PackageExporter . \ud83d\udd0d Step 3. Fill package info and generate .unityignore file # After you fill the info, then hit Generate Unity Ignore button. \ud83d\udd0d Step 4. Edit .unityignore file # All the .unityignore files can be found under PackageExporter/unityignore directory. \ud83d\udd0d Step 5. Export... # Once the .unityignore file is generated, the according package export button should appear. \ud83c\udf89 Done, and Enjoy! \ud83e\udd73 # Now you can manage as many packages you want to export! \ud83c\udf89 .unityignore File Example # Generated .unityignore file for Hello World package. # # Thank you for using `Package Exporter`. This is the generated # unityignore file. # # Package Name: Hello World # Version: 1.0.0 # Creation Date: 2017-10-25 06:58:14 # # Package Link: https://github.com/Pixisoft/PackageExporter # Author: Shen, Jen-Chieh # Email: pixisoft.tw@gmail.com # # Ignore this plugin itself. ProjectExporter \ud83d\ude80 Exporting # Export the package Hello World . \ud83d\udda5\ufe0f Batch Mode # You can export package by using Unity's batch mode. Method Arguments Details PackageExporter.BatchMode.Export --name , --version , --savePath Export package by unityignore name. Command Optional Details --name \u274c Name of the exported package listed under unityignore directory. --version \u274c Version of the exported package. --savePath \u274c Where to save the exported package. For example, $UNITY_PATH -batchmode -quit -projectPath \".\" -executeMethod PackageExporter.BatchMode.Export --name \"Hello World\" --version \"0.1.0\" --savePath \".\" The $UNITY_PATH is the path to Unity executable hence it depends on variant OS. On macOS, /Applications/Unity/Unity.app/Contents/MacOS/Unity On Windows, \"C:\\Program Files\\Unity\\Editor\\Unity.exe\" For more information, see Command line arguments . \ud83d\udcdd Todo List # [ ] Support ingore extension syntax. (*.meta) \u2753 FAQ # \ud83d\udcab Why should I use this package? # This is often use when you have multiple target to export but it's hard to memorize all contents to export for each packages. This tool resolve these issues, and provides a method similar to Git (Source Control) ignore system. \ud83d\udcab Should I commit .unityignore files to source control? # If you wish to share package export settings then yes, you should include .unityignore files to repository. Other than that, the answer would be no. License # Copyright (c) Pixisoft. All rights reserved. Licensed under MIT. See LICENSE.txt for details.","title":"Package Exporter"},{"location":"UnityAS/PackageExporter/#package-exporter","text":"Export multiple packages by just one click, with no need to uncheck the assets. This package is a packaging (exporting) tool for Unity package system. It allows you to export multiple packages with different contents. P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds.","title":"Package Exporter"},{"location":"UnityAS/PackageExporter/#features","text":"Export multiple packages in a project Export method similar to .gitignore (easy for coder) Lightweight, no other dependencies Clean, no files are generated Highly compatible to any Unity version","title":"\ud83c\udfc6 Features"},{"location":"UnityAS/PackageExporter/#how-to-use","text":"Here explains how you use this package correctly.","title":"\ud83d\udd28 How to use?"},{"location":"UnityAS/PackageExporter/#step-1-import-package","text":"You will need to import the package to your project. The package can be download from here .","title":"\ud83d\udd0d Step 1. Import Package"},{"location":"UnityAS/PackageExporter/#step-2-start-using-package-exporter-window","text":"You can start the PackageExporter window from the menu bar PackageExporter .","title":"\ud83d\udd0d Step 2. Start using Package Exporter Window"},{"location":"UnityAS/PackageExporter/#step-3-fill-package-info-and-generate-unityignore-file","text":"After you fill the info, then hit Generate Unity Ignore button.","title":"\ud83d\udd0d Step 3. Fill package info and generate .unityignore file"},{"location":"UnityAS/PackageExporter/#step-4-edit-unityignore-file","text":"All the .unityignore files can be found under PackageExporter/unityignore directory.","title":"\ud83d\udd0d Step 4. Edit .unityignore file"},{"location":"UnityAS/PackageExporter/#step-5-export","text":"Once the .unityignore file is generated, the according package export button should appear.","title":"\ud83d\udd0d Step 5. Export..."},{"location":"UnityAS/PackageExporter/#done-and-enjoy","text":"Now you can manage as many packages you want to export! \ud83c\udf89","title":"\ud83c\udf89 Done, and Enjoy! \ud83e\udd73"},{"location":"UnityAS/PackageExporter/#unityignore-file-example","text":"Generated .unityignore file for Hello World package. # # Thank you for using `Package Exporter`. This is the generated # unityignore file. # # Package Name: Hello World # Version: 1.0.0 # Creation Date: 2017-10-25 06:58:14 # # Package Link: https://github.com/Pixisoft/PackageExporter # Author: Shen, Jen-Chieh # Email: pixisoft.tw@gmail.com # # Ignore this plugin itself. ProjectExporter","title":".unityignore File Example"},{"location":"UnityAS/PackageExporter/#exporting","text":"Export the package Hello World .","title":"\ud83d\ude80 Exporting"},{"location":"UnityAS/PackageExporter/#batch-mode","text":"You can export package by using Unity's batch mode. Method Arguments Details PackageExporter.BatchMode.Export --name , --version , --savePath Export package by unityignore name. Command Optional Details --name \u274c Name of the exported package listed under unityignore directory. --version \u274c Version of the exported package. --savePath \u274c Where to save the exported package. For example, $UNITY_PATH -batchmode -quit -projectPath \".\" -executeMethod PackageExporter.BatchMode.Export --name \"Hello World\" --version \"0.1.0\" --savePath \".\" The $UNITY_PATH is the path to Unity executable hence it depends on variant OS. On macOS, /Applications/Unity/Unity.app/Contents/MacOS/Unity On Windows, \"C:\\Program Files\\Unity\\Editor\\Unity.exe\" For more information, see Command line arguments .","title":"\ud83d\udda5\ufe0f Batch Mode"},{"location":"UnityAS/PackageExporter/#todo-list","text":"[ ] Support ingore extension syntax. (*.meta)","title":"\ud83d\udcdd Todo List"},{"location":"UnityAS/PackageExporter/#faq","text":"","title":"\u2753 FAQ"},{"location":"UnityAS/PackageExporter/#why-should-i-use-this-package","text":"This is often use when you have multiple target to export but it's hard to memorize all contents to export for each packages. This tool resolve these issues, and provides a method similar to Git (Source Control) ignore system.","title":"\ud83d\udcab Why should I use this package?"},{"location":"UnityAS/PackageExporter/#should-i-commit-unityignore-files-to-source-control","text":"If you wish to share package export settings then yes, you should include .unityignore files to repository. Other than that, the answer would be no.","title":"\ud83d\udcab Should I commit .unityignore files to source control?"},{"location":"UnityAS/PackageExporter/#license","text":"Copyright (c) Pixisoft. All rights reserved. Licensed under MIT. See LICENSE.txt for details.","title":"License"},{"location":"UnityAS/PackageExporter/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # Package Exporter is a packaging (exporting) tool for Unity package system. It allows you to export multiple packages with different contents. Description # This is often use when you have multiple target to export but it's hard to memorize all contents to export for each packages. This tool resolve these issues, and provides a method similar to Git (Source Control) ignore system. Features: # Export multiple packages in a project Export method similar to .gitignore (easy for coder) Lightweight, no other dependencies Clean, no files are generated Highly compatible to any Unity version P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. More Info>> Technical details # The package uses Unity Packaging API and since Unity has established the packaging system in very early version, it will work on most of the Unity version. Thus, I will recommend you work use this package wit minimum version 5.6 or above.","title":"Details"},{"location":"UnityAS/PackageExporter/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/PackageExporter/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/PackageExporter/Details/#description","text":"","title":"Description"},{"location":"UnityAS/PackageExporter/Details/#summary-10-200-characters","text":"Package Exporter is a packaging (exporting) tool for Unity package system. It allows you to export multiple packages with different contents.","title":"Summary (10-200 characters)"},{"location":"UnityAS/PackageExporter/Details/#description_1","text":"This is often use when you have multiple target to export but it's hard to memorize all contents to export for each packages. This tool resolve these issues, and provides a method similar to Git (Source Control) ignore system.","title":"Description"},{"location":"UnityAS/PackageExporter/Details/#features","text":"Export multiple packages in a project Export method similar to .gitignore (easy for coder) Lightweight, no other dependencies Clean, no files are generated Highly compatible to any Unity version P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. More Info>>","title":"Features:"},{"location":"UnityAS/PackageExporter/Details/#technical-details","text":"The package uses Unity Packaging API and since Unity has established the packaging system in very early version, it will work on most of the Unity version. Thus, I will recommend you work use this package wit minimum version 5.6 or above.","title":"Technical details"},{"location":"UnityAS/WatchLog/","text":"WatchLog # A dedicated tool that tracks variable over time. \ud83c\udfc6 Features # Out of box Lightweight and easy to use Display an editor window with the data you want to keep an eye on Show Error/Warning/Log information Display each value in categories License # Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"WatchLog"},{"location":"UnityAS/WatchLog/#watchlog","text":"A dedicated tool that tracks variable over time.","title":"WatchLog"},{"location":"UnityAS/WatchLog/#features","text":"Out of box Lightweight and easy to use Display an editor window with the data you want to keep an eye on Show Error/Warning/Log information Display each value in categories","title":"\ud83c\udfc6 Features"},{"location":"UnityAS/WatchLog/#license","text":"Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"License"},{"location":"UnityAS/WatchLog/Details/","text":"Package upload # Additional compatibility information # Any version above 5.6+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # Watch Log is variable tracker, it helps you track components over time. Description # This tool allows you to watch multiple components over time without lockdown your inspector window. It's annoying when your game is unorganized due to multiple complex programming logic running simultaneously; this supports you to debug and break down complex game logic by tracking each GameObject's component down individually. Features # Out of box Lightweight and easy to use Display an editor window with the data you want to keep an eye on Show Error/Warning/Log information Display each value in categories P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. Technical details # The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Details"},{"location":"UnityAS/WatchLog/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/WatchLog/Details/#additional-compatibility-information","text":"Any version above 5.6+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/WatchLog/Details/#description","text":"","title":"Description"},{"location":"UnityAS/WatchLog/Details/#summary-10-200-characters","text":"Watch Log is variable tracker, it helps you track components over time.","title":"Summary (10-200 characters)"},{"location":"UnityAS/WatchLog/Details/#description_1","text":"This tool allows you to watch multiple components over time without lockdown your inspector window. It's annoying when your game is unorganized due to multiple complex programming logic running simultaneously; this supports you to debug and break down complex game logic by tracking each GameObject's component down individually.","title":"Description"},{"location":"UnityAS/WatchLog/Details/#features","text":"Out of box Lightweight and easy to use Display an editor window with the data you want to keep an eye on Show Error/Warning/Log information Display each value in categories P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. P.S. Source code is NOT included, please contact us or leave a review so we can invite you to access the source code If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com.","title":"Features"},{"location":"UnityAS/WatchLog/Details/#technical-details","text":"The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we encourge you use this package in Unity version 2021. We would continue support the latest version of Unity Engine.","title":"Technical details"},{"location":"UnityAS/sHierarchy/","text":"sHierarchy # Minimalistic good looking hierarchy \ud83c\udfc6 Features # Show enable/disable state of each components Show log/warning/error icon Clean, no files are generated Clean, no other resource files Lightweight, no other dependencies No redundant workflow Work in Prefab Mode License # Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"sHierarchy"},{"location":"UnityAS/sHierarchy/#shierarchy","text":"Minimalistic good looking hierarchy","title":"sHierarchy"},{"location":"UnityAS/sHierarchy/#features","text":"Show enable/disable state of each components Show log/warning/error icon Clean, no files are generated Clean, no other resource files Lightweight, no other dependencies No redundant workflow Work in Prefab Mode","title":"\ud83c\udfc6 Features"},{"location":"UnityAS/sHierarchy/#license","text":"Copyright (c) Pixisoft. All rights reserved. pixisoft.tw@gmail.com","title":"License"},{"location":"UnityAS/sHierarchy/Details/","text":"Package upload # Additional compatibility information # Any version above 2019.1+ sould work. Please see Technical details section for more information. Description # Summary (10-200 characters) # sHierarchy aims to be robust but keep both stability and compatiblity high to developers. Description # sHierarchy is meant to design that matches the Unity default settings. With that being said, user should find familiars without forcing themselves learning a new tool. We choose to design a minimalistic hierarchy without over exaggerate the tool itself. Yet the tool should be powerful enough for developers to use for their daily tasks. Principles # Plug 'n' play , it works out of the box Lightweight , no other dependencies Does not pollute (project) , no files are generated Clean , no other resource files Stable and compatible , no hacky code Open Source , anyone can help us improve! Features # Control all over Edit -> Preferences -> sHierarchy panel Display icon for each GameObject and Components Display enable/disable state of each GameObject/Components Display log/warning/error icon (behind the name of GameObject) Displaying tag and layer of a GameObject Displaying instance ID of a GameObject Any feature can be disabled Work in play mode Work in prefab isolation mode P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. More Info>> Technical details # This plugin is base on top of Custom Hierarchy for Unity made by author Federico . Thankfully, Federico has granted us the permission to sell on to market, due to the changes we have changed! The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we would recommended you use this package in Unity version 2021. We would continue support the latest version of Unity Engine. Notice the tool is open source; so you can find the full source code on GitHub, the link https://github.com/Pixisoft/sHierarchy. Feel free to open issues if you have question about the tool, or even better if you like to contribute to the package by opening pull requests!","title":"Details"},{"location":"UnityAS/sHierarchy/Details/#package-upload","text":"","title":"Package upload"},{"location":"UnityAS/sHierarchy/Details/#additional-compatibility-information","text":"Any version above 2019.1+ sould work. Please see Technical details section for more information.","title":"Additional compatibility information"},{"location":"UnityAS/sHierarchy/Details/#description","text":"","title":"Description"},{"location":"UnityAS/sHierarchy/Details/#summary-10-200-characters","text":"sHierarchy aims to be robust but keep both stability and compatiblity high to developers.","title":"Summary (10-200 characters)"},{"location":"UnityAS/sHierarchy/Details/#description_1","text":"sHierarchy is meant to design that matches the Unity default settings. With that being said, user should find familiars without forcing themselves learning a new tool. We choose to design a minimalistic hierarchy without over exaggerate the tool itself. Yet the tool should be powerful enough for developers to use for their daily tasks.","title":"Description"},{"location":"UnityAS/sHierarchy/Details/#principles","text":"Plug 'n' play , it works out of the box Lightweight , no other dependencies Does not pollute (project) , no files are generated Clean , no other resource files Stable and compatible , no hacky code Open Source , anyone can help us improve!","title":"Principles"},{"location":"UnityAS/sHierarchy/Details/#features","text":"Control all over Edit -> Preferences -> sHierarchy panel Display icon for each GameObject and Components Display enable/disable state of each GameObject/Components Display log/warning/error icon (behind the name of GameObject) Displaying tag and layer of a GameObject Displaying instance ID of a GameObject Any feature can be disabled Work in play mode Work in prefab isolation mode P.S. Notice this package will only work in Editor, and does not expect user to use it in production builds. If you have any issue please contact us through GitHub or email to pixisoft.tw@gmail.com. More Info>>","title":"Features"},{"location":"UnityAS/sHierarchy/Details/#technical-details","text":"This plugin is base on top of Custom Hierarchy for Unity made by author Federico . Thankfully, Federico has granted us the permission to sell on to market, due to the changes we have changed! The source can be compiled in .NET 2.0 or above, hence all .NET version should work well with this plugin. This tool has been tested on Unity version 2019, but we would recommended you use this package in Unity version 2021. We would continue support the latest version of Unity Engine. Notice the tool is open source; so you can find the full source code on GitHub, the link https://github.com/Pixisoft/sHierarchy. Feel free to open issues if you have question about the tool, or even better if you like to contribute to the package by opening pull requests!","title":"Technical details"},{"location":"Web/","text":"Web #","title":"Web"},{"location":"Web/#web","text":"","title":"Web"}]}